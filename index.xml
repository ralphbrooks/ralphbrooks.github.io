<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ralph Brooks</title>
    <link>https://ralphabrooks.com/</link>
    <description>Recent content on Ralph Brooks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 May 2019 12:25:53 -0400</lastBuildDate>
    
	<atom:link href="https://ralphabrooks.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction and Links to NLP Demo</title>
      <link>https://ralphabrooks.com/articles/intro_and_links_to_demo/</link>
      <pubDate>Mon, 27 May 2019 12:25:53 -0400</pubDate>
      
      <guid>https://ralphabrooks.com/articles/intro_and_links_to_demo/</guid>
      <description>I am a data scientist and machine learning engineer in Frisco, TX where I am working on items at the interaction of deep learning, natural language processing, and Bayesian statistics.
Currently, I am working on ways to detect emotion in language. Some of my work is at:
 Toxic Classififer Detection of sentiment vs neutral  </description>
    </item>
    
    <item>
      <title>Setting Environment Variables From A Linux Script</title>
      <link>https://ralphabrooks.com/linux/environment/setting_environment_variables_from_script/</link>
      <pubDate>Mon, 27 May 2019 12:25:53 -0400</pubDate>
      
      <guid>https://ralphabrooks.com/linux/environment/setting_environment_variables_from_script/</guid>
      <description>If you are spinning up different machines, it may be helpful to set the environment variables for that machine from a linux script.
The file might look like
environ.sh
export APIKEY=&amp;#34;Sample API key&amp;#34; To use this on the spun-up machine, use the dot space command as follows:
. environ.sh</description>
    </item>
    
    <item>
      <title>Using a confusion matrix within Keras</title>
      <link>https://ralphabrooks.com/deep_learning/keras/using_confusion_matrix_with_keras/</link>
      <pubDate>Mon, 27 May 2019 12:25:53 -0400</pubDate>
      
      <guid>https://ralphabrooks.com/deep_learning/keras/using_confusion_matrix_with_keras/</guid>
      <description>Assuming that y_label are the actual gold standard labels that you want to evaluate, you can use sklearn&amp;rsquo;s confusion matrix function in order to evaluate a keras model.
Code would look like the following
import numpy as np from sklearn.metrics import confusion_matrix model = &amp;lt;use your favorite keras model here&amp;gt; y_pred = model.predict(test_data, test_labels) y_pred_max = np.apply_along_axis(lambda x : np.argmax(x) +1, axis =1, arr=y_pred) cm = confusion_matrix(test_label, y_pred_max)</description>
    </item>
    
    <item>
      <title>About Ralph Brooks</title>
      <link>https://ralphabrooks.com/about/ralph_brooks/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://ralphabrooks.com/about/ralph_brooks/</guid>
      <description>I am a data scientist and machine learning engineer in Frisco, TX.
 Twitter: @ralphbrooks LinkedIn: https://www.linkedin.com/in/ralphbrooks/  </description>
    </item>
    
  </channel>
</rss>